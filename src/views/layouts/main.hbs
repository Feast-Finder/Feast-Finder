{{>head}}
{{>nav}}
<script src="/socket.io/socket.io.js"></script>
{{{body}}}

<!-- Invitation Modal (triggered on any page) -->
<div class="modal fade" id="inviteModal" tabindex="-1" aria-labelledby="inviteModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="inviteModalLabel">Swipe Session Invite</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        A friend invited you to join a swiping session.
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" id="joinSwipeBtn">Join Swiping</button>
      </div>
    </div>
  </div>
</div>

<script>
  const socket = io();
  const userId = {{#if user}}{{user.user_id}}{{else}}null{{/if}};
  console.log('üì° main.hbs: socket loaded for userId:', userId);

socket.on('connect', () => {
  console.log('‚úÖ Connected with socket id:', socket.id);
  socket.emit('register-user', { userId });
  socket.emit('ready-for-invites', { userId });
});


  // Optional: on reconnect
socket.io.on('reconnect', () => {
  console.log('üîÅ Socket reconnected');
  socket.emit('register-user', { userId });
  socket.emit('ready-for-invites', { userId });
});

window.addEventListener('DOMContentLoaded', () => {
  console.log('üöÄ DOM loaded and JS running');

  const payloadRaw = sessionStorage.getItem('invitePayload');

  if (payloadRaw) {
    const payload = JSON.parse(payloadRaw);
    sessionStorage.removeItem('invitePayload'); // clear after use

    // üí° Skip modal entirely ‚Äî auto-join session
    socket.on('connect', () => {
      console.log('ü§ù Auto-joining session from invite');

      socket.emit('join-session', {
        groupId: payload.groupId,
        userId
      });

      socket.emit('ready-to-swipe', {
        groupId: payload.groupId,
        userId,
        lat: payload.lat,
        lng: payload.lng,
        types: payload.types
      });
    });
  }
});

  // Only log that we got the event ‚Äî UI logic stays in home.hbs
  socket.on('friend-accepted-invite', () => {
    console.log('üéâ friend-accepted-invite received globally');
  });

  // Invitation Modal ‚Äî redirects to /home with payload
socket.on('invite-user-to-session', ({ groupId, lat, lng, types }) => {
  console.log('üî• invite-user-to-session event received');
  console.log('üîî About to show the invite modal for group:', groupId);
  sessionLat = lat;
  sessionLng = lng;
  sessionTypes = types || [];
  const inviteModalEl = document.getElementById('inviteModal');
  const joinBtn = document.getElementById('joinSwipeBtn');

  if (!inviteModalEl || !joinBtn) {
    console.error('‚ùå Modal or button missing');
    return;
  }

  const modal = bootstrap.Modal.getOrCreateInstance(inviteModalEl);
  modal.show();
  console.log('‚úÖ Modal.show() called');

joinBtn.onclick = () => {
  console.log('üì¨ Accepting invite for group', groupId);

  // Emit all session events BEFORE redirect
  socket.emit('join-session', { groupId, userId });
  socket.emit('accept-session-invite', { groupId, userId });
  socket.emit('ready-to-swipe', {
    groupId,
    userId,
    lat: sessionLat,
    lng: sessionLng,
    types: sessionTypes
  });

  // Optional: store in sessionStorage to resume UI on next page
  sessionStorage.setItem('invitePayload', JSON.stringify({
    groupId,
    lat: sessionLat,
    lng: sessionLng,
    types: sessionTypes
  }));

  // Clean up modal
  modal.hide();
  document.body.classList.remove('modal-open');
  document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());

  // üîÅ Redirect to /home
  window.location.href = '/home';
};

});

socket.on('swipe-session-cancelled', () => {
  console.log('‚ùå Session was cancelled by inviter');

  // Hide the invite modal if open
  const inviteModalEl = document.getElementById('inviteModal');
  if (inviteModalEl) {
    const inviteModal = bootstrap.Modal.getOrCreateInstance(inviteModalEl);
    inviteModal.hide();
  }

  // Clear session info
  sessionStorage.removeItem('invitePayload');
  delete window._pendingInvitePayload;

  // Show feedback
  alert('Your friend cancelled the swiping session.');

  // Redirect home
  window.location.href = '/home';
});





</script>

{{>footer}}
