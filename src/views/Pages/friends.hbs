{{#> layout name="main" }}
<div class="container pt-4">
  <h2 class="mb-4">Friends</h2>

  {{#if error}}
  <div class="alert alert-danger">{{error}}</div>
  {{/if}}

  {{#if success}}
  <div class="alert alert-success">{{success}}</div>
  {{/if}}

  <div class="row">
    <!-- Current Friends -->
    <div class="col-md-6 mb-4">
      <div class="card">
        <div class="card-header bg-primary text-white">
          <h5 class="card-title mb-0">Your Friends</h5>
        </div>
        <div class="card-body">
          {{#if friends.length}}
          <ul class="list-group">
            {{#each friends}}
            <li class="list-group-item d-flex justify-content-between align-items-center">
              <span>{{this.username}}</span>
              <button class="btn btn-sm btn-outline-danger remove-friend" data-user-id="{{this.user_id}}">
                Remove
              </button>
            </li>
            {{/each}}
          </ul>
          {{else}}
          <p class="text-muted">You don't have any friends yet. Send a friend request to get started!</p>
          {{/if}}
        </div>
      </div>
    </div>

    <!-- Friend Requests -->
    <div class="col-md-6 mb-4">
      <div class="card">
        <div class="card-header bg-info text-white">
          <h5 class="card-title mb-0">Friend Requests</h5>
        </div>
        <div class="card-body">
          {{#if requests.length}}
          <ul class="list-group">
            {{#each requests}}
            <li class="list-group-item d-flex justify-content-between align-items-center">
              <span>{{this.username}}</span>
              <div>
                <button class="btn btn-sm btn-success accept-request" data-user-id="{{this.user_id}}">
                  Accept
                </button>
                <button class="btn btn-sm btn-outline-secondary decline-request" data-user-id="{{this.user_id}}">
                  Decline
                </button>
              </div>
            </li>
            {{/each}}
          </ul>
          {{else}}
          <p class="text-muted">No pending friend requests.</p>
          {{/if}}
        </div>
      </div>
    </div>
  </div>

  <!-- Add New Friends -->
  <div class="card mb-4">
    <div class="card-header bg-success text-white">
      <h5 class="card-title mb-0">Add Friends</h5>
    </div>
    <div class="card-body">
      {{#if users.length}}
      <div class="mb-3">
        <select id="userSelect" class="form-select">
          <option value="">Select a user to add as friend...</option>
          {{#each users}}
          <option value="{{this.user_id}}">{{this.username}}</option>
          {{/each}}
        </select>
      </div>
      <button id="sendRequestBtn" class="btn btn-primary">Send Friend Request</button>
      {{else}}
      <p class="text-muted">No users available to add as friends.</p>
      {{/if}}
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Send Friend Request
    const sendRequestBtn = document.getElementById('sendRequestBtn');
    const userSelect = document.getElementById('userSelect');

    if (sendRequestBtn && userSelect) {
      sendRequestBtn.addEventListener('click', async function() {
        const userId = userSelect.value;
        if (!userId) {
          alert('Please select a user');
          return;
        }

        try {
          const response = await fetch('/friends/request', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ user_id: userId })
          });

          const data = await response.json();
          if (data.success) {
            alert('Friend request sent!');
            window.location.reload();
          } else {
            alert('Failed to send friend request: ' + (data.error || 'Unknown error'));
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while sending the friend request');
        }
      });
    }

    // Accept Friend Request
    document.querySelectorAll('.accept-request').forEach(button => {
      button.addEventListener('click', async function() {
        const userId = this.dataset.userId;

        try {
          const response = await fetch('/friends/accept', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ user_id: userId })
          });

          const data = await response.json();
          if (data.success) {
            alert('Friend request accepted!');
            window.location.reload();
          } else {
            alert('Failed to accept friend request: ' + (data.error || 'Unknown error'));
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while accepting the friend request');
        }
      });
    });

    // Decline Friend Request
    document.querySelectorAll('.decline-request').forEach(button => {
      button.addEventListener('click', async function() {
        const userId = this.dataset.userId;

        try {
          const response = await fetch('/friends/decline', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ user_id: userId })
          });

          const data = await response.json();
          if (data.success) {
            alert('Friend request declined');
            window.location.reload();
          } else {
            alert('Failed to decline friend request: ' + (data.error || 'Unknown error'));
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while declining the friend request');
        }
      });
    });

    // Remove Friend
    document.querySelectorAll('.remove-friend').forEach(button => {
      button.addEventListener('click', async function() {
        if (!confirm('Are you sure you want to remove this friend?')) {
          return;
        }

        const userId = this.dataset.userId;

        try {
          const response = await fetch('/friends/remove', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ user_id: userId })
          });

          const data = await response.json();
          if (data.success) {
            alert('Friend removed');
            window.location.reload();
          } else {
            alert('Failed to remove friend: ' + (data.error || 'Unknown error'));
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while removing the friend');
        }
      });
    });
  });
</script>
{{/layout}}